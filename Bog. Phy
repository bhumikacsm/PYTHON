Here's a Python program demonstrating class inheritance with a base class Animal and a derived class Dog:

class Animal:
    def __init__(self, name):
        """Initialize the Animal with a name."""
        self.name = name

    def make_sound(self):
        """Generic sound method (to be overridden)."""
        print(f"{self.name} makes a sound.")

# Derived class
class Dog(Animal):
    def __init__(self, name, breed):
        """Initialize Dog with name and breed, calling the parent class initializer."""
        super().__init__(name)  # Call the base class constructor
        self.breed = breed

    def make_sound(self):
        """Override the make_sound method for Dog."""
        print(f"{self.name} barks: Woof! Woof!")

    def fetch(self):
        """Method specific to Dog."""
        print(f"{self.name}, the {self.breed}, is fetching the ball!")

# Example usage
dog = Dog("Buddy", "Golden Retriever")
dog.make_sound()  # Output: Buddy barks: Woof! Woof!
dog.fetch()       # Output: Buddy, the Golden Retriever, is fetching the ball!



